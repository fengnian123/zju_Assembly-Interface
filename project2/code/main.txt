
main:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 92 2f 00 00    	push   0x2f92(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 93 2f 00 00 	bnd jmp *0x2f93(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 9d 2f 00 00 	bnd jmp *0x2f9d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001060 <__stack_chk_fail@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 5d 2f 00 00 	bnd jmp *0x2f5d(%rip)        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001070 <printf@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 55 2f 00 00 	bnd jmp *0x2f55(%rip)        # 3fd0 <printf@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	31 ed                	xor    %ebp,%ebp
    1086:	49 89 d1             	mov    %rdx,%r9
    1089:	5e                   	pop    %rsi
    108a:	48 89 e2             	mov    %rsp,%rdx
    108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1091:	50                   	push   %rax
    1092:	54                   	push   %rsp
    1093:	45 31 c0             	xor    %r8d,%r8d
    1096:	31 c9                	xor    %ecx,%ecx
    1098:	48 8d 3d d3 01 00 00 	lea    0x1d3(%rip),%rdi        # 1272 <main>
    109f:	ff 15 33 2f 00 00    	call   *0x2f33(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10a5:	f4                   	hlt    
    10a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10ad:	00 00 00 

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4010 <__TMC_END__>
    10b7:	48 8d 05 52 2f 00 00 	lea    0x2f52(%rip),%rax        # 4010 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 16 2f 00 00 	mov    0x2f16(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmp    *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	ret    
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 29 2f 00 00 	lea    0x2f29(%rip),%rdi        # 4010 <__TMC_END__>
    10e7:	48 8d 35 22 2f 00 00 	lea    0x2f22(%rip),%rsi        # 4010 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 89 f0             	mov    %rsi,%rax
    10f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10f8:	48 c1 f8 03          	sar    $0x3,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    %rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmp    *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	ret    
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	80 3d e5 2e 00 00 00 	cmpb   $0x0,0x2ee5(%rip)        # 4010 <__TMC_END__>
    112b:	75 2b                	jne    1158 <__do_global_dtors_aux+0x38>
    112d:	55                   	push   %rbp
    112e:	48 83 3d c2 2e 00 00 	cmpq   $0x0,0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1135:	00 
    1136:	48 89 e5             	mov    %rsp,%rbp
    1139:	74 0c                	je     1147 <__do_global_dtors_aux+0x27>
    113b:	48 8b 3d c6 2e 00 00 	mov    0x2ec6(%rip),%rdi        # 4008 <__dso_handle>
    1142:	e8 09 ff ff ff       	call   1050 <__cxa_finalize@plt>
    1147:	e8 64 ff ff ff       	call   10b0 <deregister_tm_clones>
    114c:	c6 05 bd 2e 00 00 01 	movb   $0x1,0x2ebd(%rip)        # 4010 <__TMC_END__>
    1153:	5d                   	pop    %rbp
    1154:	c3                   	ret    
    1155:	0f 1f 00             	nopl   (%rax)
    1158:	c3                   	ret    
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	e9 77 ff ff ff       	jmp    10e0 <register_tm_clones>

0000000000001169 <stringCompare>:
    1169:	f3 0f 1e fa          	endbr64 
    116d:	55                   	push   %rbp
    116e:	48 89 e5             	mov    %rsp,%rbp
    1171:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1175:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1179:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1180:	eb 1d                	jmp    119f <stringCompare+0x36>
    1182:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1185:	48 98                	cltq   
    1187:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    118b:	48 01 d0             	add    %rdx,%rax
    118e:	0f b6 00             	movzbl (%rax),%eax
    1191:	84 c0                	test   %al,%al
    1193:	75 07                	jne    119c <stringCompare+0x33>
    1195:	b8 00 00 00 00       	mov    $0x0,%eax
    119a:	eb 4c                	jmp    11e8 <stringCompare+0x7f>
    119c:	ff 45 fc             	incl   -0x4(%rbp)
    119f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11a2:	48 98                	cltq   
    11a4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    11a8:	48 01 d0             	add    %rdx,%rax
    11ab:	0f b6 10             	movzbl (%rax),%edx
    11ae:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11b1:	48 98                	cltq   
    11b3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    11b7:	48 01 c8             	add    %rcx,%rax
    11ba:	0f b6 00             	movzbl (%rax),%eax
    11bd:	38 c2                	cmp    %al,%dl
    11bf:	74 c1                	je     1182 <stringCompare+0x19>
    11c1:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11c4:	48 98                	cltq   
    11c6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    11ca:	48 01 d0             	add    %rdx,%rax
    11cd:	0f b6 00             	movzbl (%rax),%eax
    11d0:	0f be c0             	movsbl %al,%eax
    11d3:	8b 55 fc             	mov    -0x4(%rbp),%edx
    11d6:	48 63 d2             	movslq %edx,%rdx
    11d9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    11dd:	48 01 ca             	add    %rcx,%rdx
    11e0:	0f b6 12             	movzbl (%rdx),%edx
    11e3:	0f be d2             	movsbl %dl,%edx
    11e6:	29 d0                	sub    %edx,%eax
    11e8:	5d                   	pop    %rbp
    11e9:	c3                   	ret    

00000000000011ea <str_cmpi_cmp_mask>:
    11ea:	f3 0f 1e fa          	endbr64 
    11ee:	55                   	push   %rbp
    11ef:	48 89 e5             	mov    %rsp,%rbp
    11f2:	48 83 ec 60          	sub    $0x60,%rsp
    11f6:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    11fa:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    11fe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1202:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1206:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    120a:	c5 fa 6f 00          	vmovdqu (%rax),%xmm0
    120e:	c5 f9 7f 45 d0       	vmovdqa %xmm0,-0x30(%rbp)
    1213:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1217:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    121b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    121f:	c5 fa 6f 00          	vmovdqu (%rax),%xmm0
    1223:	c5 f9 7f 45 e0       	vmovdqa %xmm0,-0x20(%rbp)
    1228:	c5 f9 6f 4d e0       	vmovdqa -0x20(%rbp),%xmm1
    122d:	c5 f9 6f 45 d0       	vmovdqa -0x30(%rbp),%xmm0
    1232:	c4 e3 79 63 c1 08    	vpcmpistri $0x8,%xmm1,%xmm0
    1238:	c4 e3 79 62 c1 08    	vpcmpistrm $0x8,%xmm1,%xmm0
    123e:	c5 f9 7f 45 f0       	vmovdqa %xmm0,-0x10(%rbp)
    1243:	c5 f9 6f 45 f0       	vmovdqa -0x10(%rbp),%xmm0
    1248:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    124d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    1251:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1255:	48 89 c6             	mov    %rax,%rsi
    1258:	48 8d 05 a5 0d 00 00 	lea    0xda5(%rip),%rax        # 2004 <_IO_stdin_used+0x4>
    125f:	48 89 c7             	mov    %rax,%rdi
    1262:	b8 00 00 00 00       	mov    $0x0,%eax
    1267:	e8 04 fe ff ff       	call   1070 <printf@plt>
    126c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1270:	c9                   	leave  
    1271:	c3                   	ret    

0000000000001272 <main>:
    1272:	f3 0f 1e fa          	endbr64 
    1276:	55                   	push   %rbp
    1277:	48 89 e5             	mov    %rsp,%rbp
    127a:	48 83 ec 20          	sub    $0x20,%rsp
    127e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1285:	00 00 
    1287:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    128b:	31 c0                	xor    %eax,%eax
    128d:	c7 45 ec 48 65 6c 6c 	movl   $0x6c6c6548,-0x14(%rbp)
    1294:	66 c7 45 f0 6f 00    	movw   $0x6f,-0x10(%rbp)
    129a:	c7 45 f2 57 6f 72 6c 	movl   $0x6c726f57,-0xe(%rbp)
    12a1:	66 c7 45 f6 64 00    	movw   $0x64,-0xa(%rbp)
    12a7:	48 8d 55 f2          	lea    -0xe(%rbp),%rdx
    12ab:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
    12af:	48 89 d6             	mov    %rdx,%rsi
    12b2:	48 89 c7             	mov    %rax,%rdi
    12b5:	e8 af fe ff ff       	call   1169 <stringCompare>
    12ba:	89 45 e8             	mov    %eax,-0x18(%rbp)
    12bd:	8b 45 e8             	mov    -0x18(%rbp),%eax
    12c0:	89 c6                	mov    %eax,%esi
    12c2:	48 8d 05 48 0d 00 00 	lea    0xd48(%rip),%rax        # 2011 <_IO_stdin_used+0x11>
    12c9:	48 89 c7             	mov    %rax,%rdi
    12cc:	b8 00 00 00 00       	mov    $0x0,%eax
    12d1:	e8 9a fd ff ff       	call   1070 <printf@plt>
    12d6:	b8 00 00 00 00       	mov    $0x0,%eax
    12db:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    12df:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    12e6:	00 00 
    12e8:	74 05                	je     12ef <main+0x7d>
    12ea:	e8 71 fd ff ff       	call   1060 <__stack_chk_fail@plt>
    12ef:	c9                   	leave  
    12f0:	c3                   	ret    

Disassembly of section .fini:

00000000000012f4 <_fini>:
    12f4:	f3 0f 1e fa          	endbr64 
    12f8:	48 83 ec 08          	sub    $0x8,%rsp
    12fc:	48 83 c4 08          	add    $0x8,%rsp
    1300:	c3                   	ret    
